(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(4);


/***/ },
/* 1 */,
/* 2 */
/***/ function(module, exports) {

	module.exports = require("@angular/core");

/***/ },
/* 3 */,
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var dialog_titlebar_component_1 = __webpack_require__(5);
	__webpack_require__(6);
	/**
	 * Represents the Kendo UI Dialog component for Angular.
	 */
	var DialogComponent = (function () {
	    function DialogComponent() {
	        /**
	         * Fires when the user clicks on the **Close** button of the Dialog.
	         */
	        this.onClose = new core_1.EventEmitter();
	    }
	    DialogComponent.prototype.ngAfterContentInit = function () {
	        this.bubbleOnClose(this.titlebarContent);
	    };
	    DialogComponent.prototype.ngAfterViewInit = function () {
	        this.bubbleOnClose(this.titlebarView);
	    };
	    Object.defineProperty(DialogComponent.prototype, "className", {
	        get: function () {
	            return 'k-dialog-wrapper';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    DialogComponent.prototype.bubbleOnClose = function (titlebar) {
	        var _this = this;
	        if (titlebar) {
	            titlebar.onClose.subscribe(function (e) { return _this.onClose.emit(e); });
	        }
	    };
	    __decorate([
	        core_1.Input('title'), 
	        __metadata('design:type', String)
	    ], DialogComponent.prototype, "title", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], DialogComponent.prototype, "onClose", void 0);
	    __decorate([
	        core_1.ContentChild(dialog_titlebar_component_1.DialogTitleBarComponent), 
	        __metadata('design:type', dialog_titlebar_component_1.DialogTitleBarComponent)
	    ], DialogComponent.prototype, "titlebarContent", void 0);
	    __decorate([
	        core_1.ViewChild(dialog_titlebar_component_1.DialogTitleBarComponent), 
	        __metadata('design:type', dialog_titlebar_component_1.DialogTitleBarComponent)
	    ], DialogComponent.prototype, "titlebarView", void 0);
	    __decorate([
	        core_1.HostBinding('class'), 
	        __metadata('design:type', String)
	    ], DialogComponent.prototype, "className", null);
	    DialogComponent = __decorate([
	        core_1.Component({
	            animations: [
	                core_1.trigger('overlayAppear', [
	                    core_1.state('in', core_1.style({ opacity: 1 })),
	                    core_1.transition('void => *', [
	                        core_1.style({ opacity: .1 }),
	                        core_1.animate('.3s cubic-bezier(.2, .6, .4, 1)')
	                    ])
	                ]),
	                core_1.trigger('dialogSlideInAppear', [
	                    core_1.state('in', core_1.style({ transform: 'translate(-50%, -50%)' })),
	                    core_1.transition('void => *', [
	                        core_1.style({ transform: 'translate(-50%, -60%)' }),
	                        core_1.animate('.3s cubic-bezier(.2, 1, .2, 1)')
	                    ])
	                ])
	            ],
	            selector: 'kendo-dialog',
	            template: "\n    <div class=\"k-overlay\" @overlayAppear></div>\n\n    <div class=\"k-widget k-dialog k-window k-centered k-dialog-centered\" @dialogSlideInAppear>\n\n      <kendo-dialog-titlebar *ngIf=\"title\">{{title}}</kendo-dialog-titlebar>\n      <ng-content select=\"kendo-dialog-titlebar\" *ngIf=\"!title\"></ng-content>\n\n      <div class=\"k-window-content\">\n        <ng-content></ng-content>\n      </div>\n\n      <ng-content select=\"kendo-dialog-actions\"></ng-content>\n\n    </div>\n  "
	        }), 
	        __metadata('design:paramtypes', [])
	    ], DialogComponent);
	    return DialogComponent;
	}());
	exports.DialogComponent = DialogComponent;


/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = require("./dialog-titlebar.component");

/***/ },
/* 6 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }
/******/ ])));
//# sourceMappingURL=dialog.component.js.map